#!/bin/bash

# Usage: add-parents <parentmap> [<filter-branch options>...] [--] [<rev-list options...>]
#
# parentmap must be a filename with *git* revisions formatted like this:
# 
# f3ca1dab5c862581690a988ab41ac59a292095f8 1ddbe3918159275dd514aea734839583bfd24c59
# fceef269d3a1c3e9321f5dd376f6b305176854d6 da3e27ee47f6016cff637045f29a74f90a4cdab2
# 
# For each line in the parentmap, this script will add the second revision
# as a new parent for the first revision, via filter-branch. The revisions
# must not be abbreviated. Only full SHA-1 IDs are supported, not general
# refspecs.
#
# You can pass extra filter-branch options to add-parents, for example to
# run another filter, or to limit revisions with rev-list options. However,
# you must not pass --parent-filter, since that's used internally by
# add-parents.

set -e

parentmap="$1"
if [[ $parentmap = '-' ]]; then
    parentmap=/dev/stdin; # Not portable. So sue me.
fi

codebefore='
merge_gitrev=;
case $GIT_COMMIT in
'
codeafter='
esac;
if [ -n "$merge_gitrev" ]; then
    echo "$(cat) -p $(map $merge_gitrev)";
else
    cat;
fi'
code="$codebefore"
while read srcrev newparent; do
    code="$code    $srcrev) newparent=$newparent;;
"
done < "$parentmap"
code="$code$codeafter"
shift

git filter-branch --parent-filter "$code" "$@"
